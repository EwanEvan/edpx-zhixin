{%extends 'c_base.tpl'%} {%block name="data_modifier"%}{%$extData.feData.hasShowURLGap = true%}{%$extData.feData.hasBorder = true%}{%$st1spec = $tplData.status[0].st1spec%} {%if !$st1spec%} {%$st1spec = '近期播出'%} {%/if%}{%/block%}{%block name='content'%}<style data-merge>{%fe_fn_c_css css="img"%}.op-spring-video-box{text-align:center}.op-spring-video-list{margin-bottom:-15px}.op-spring-video-list a{text-decoration:none}.op-spring-video-list li{padding-bottom:15px}.op-spring-video-img{display:block;position:relative;overflow:hidden}.op-spring-video-img span{height:43px;position:absolute;bottom:0;left:0;color:#fff;font-size:.923em;padding-top:3px;line-height:20px;overflow:hidden}.op-spring-video-img .op-spring-video-guestbg{background:#000;opacity:.65;filter:alpha(opacity=65);_bottom:-1px{%*i*%}}.op-spring-video-guestTitle{width:2.769em;text-align:right}.op-spring-video-guest{margin-left:2.923em;width:6.385em;text-align:left;*word-spacing:-2px}.op-spring-video-time{display:block}.op-spring-video-stbox{display:block;*word-spacing:-4px}.op-spring-video-st1text,.op-spring-video-st2text,.op-spring-video-st3text{padding-top:1px;display:none}.op-spring-video-st1 .op-spring-video-st1text{display:inline}.op-spring-video-st2 .op-spring-video-st2text{position:relative;*top:-1px;display:inline}.o{%*i*%}p-spring-video-st3 .op-spring-video-st3text{display:inline}.op-spring-video-st2text i{_margin:3px}.op-spring-video-btn{border-top:1px solid #f3f3f3;margin:9px 0 -9px;cursor:pointer;padding:7px 0;zoom:1}.op-spring-video-btnshow .op-spring-video-hidetext,.op-spring-video-btnshow .c-icon-chevron-top{display:none}.op-spring-video-btnhide .op-spring-video-showtext,.op-spring-video-btnhide .c-icon-chevron-bottom{display:none}</style><style>.op-spring-video-guestbg{width:{%fe_fn_c_get_img_height col=6 border="1" %}px}.op-spring-video-img{height:{%fe_fn_c_get_img_height col=6 rate=161/121 border="1" %}px}</style><div class="op-spring-video-box"> <ul class="op-spring-video-list c-clearfix"> {%$now = time()%} {%$nowDate = $now|date_format:'%Y-%m-%d'%} {%foreach array_slice( $tplData.video, 0, 4 ) as $item%} {%* 计算开始和结束时间 *%} {%$startTime = strtotime( $item.startTime )%} {%$endTime = strtotime( $item.endTime )%} {%$st = 2%} {%$st1text = $tplData.status[0].st1%} {%* 根据开始和结束时间判断当前的状态 *%} {%if $now < $startTime%} {%$st = 1%} {%if $nowDate != $startTime|date_format:'%Y-%m-%d'%} {%$st1text = $st1spec%} {%/if%} {%/if%} {%if $now > $endTime%} {%$st = 3%} {%/if%} <li class="c-span6 {%if $item@last%}c-span-last{%/if%} op-spring-video-st{%$st|escape:'html'%}" spring-video='{"status":"{%$st|escape:'html'%}","startTime":"{%$startTime*1000|escape:'html'%}","endTime":"{%$endTime*1000|escape:'html'%}"}'> <a href="{%$item.url%}" class="op-spring-video-img" target="_blank"> <img src="{%$item.img%}" class="c-img c-img6"  /> <span class="op-spring-video-guestbg"></span> <span class="op-spring-video-guestTitle">{%$tplData.guestTitle|escape:'html'%}</span> <span class="op-spring-video-guest">{%$item.guest|limitlen:28|escape:'html'%}</span> </a> <a href="{%$item.url%}" target="_blank">{%$item.title|limitlen:18|escape:'html'%}</a> <span class="op-spring-video-time">{%$item.showtime|escape:'html'%}</span> <span class="op-spring-video-stbox"> <span class="op-spring-video-st1text">{%$st1text|escape:'html'%}</span> <a href="{%$item.url%}" target="_blank" class="op-spring-video-st2text">{%$tplData.status[0].st2|escape:'html'%}</a> <a href="{%$item.url%}" target="_blank" class="op-spring-video-st3text">{%$tplData.status[0].st3|escape:'html'%}</a> </span> </li> {%/foreach%} </ul> {%if count($tplData.video) > 4%} <div class="op-spring-video-btn op-spring-video-btnshow OP_LOG_BTN" data-click="{'fm':'beha'}"> <span class="op-spring-video-showtext">{%$tplData.tips[0].show|escape:'html'%}</span> <i class="op-spring-video-btnicon c-icon c-icon-chevron-bottom"></i> <span class="op-spring-video-hidetext">{%$tplData.tips[0].hide|escape:'html'%}</span> <i class="op-spring-video-btnicon c-icon c-icon-chevron-top"></i> </div> {%/if%}</div><script >
    A.setup({
        videoList: {%json_encode($tplData.video)%},
        status: {%json_encode($tplData.status[0])%},
        guestTitle: '{%$tplData.guestTitle|escape:'javascript'%}',
        time: {
            realTime: new Date( {%time()*1000%} ),
            JSTime: new Date()
        },
        st1spec: '{%$st1spec|escape:'javascript'%}'
    });
</script><script data-merge>A.setup(function(){var _this = this,videoList = _this.data.videoList,status = _this.data.status,st1spec = _this.data.st1spec,time = _this.data.time,guestTitle = _this.data.guestTitle,btn = _this.find( '.op-spring-video-btn' ),listBox = _this.find( '.op-spring-video-list' ),firstPageList = _this.find( 'li' ),renderVideo,limitLen,getNow,switchTime,timer,timerFuncs,bindTime,getDate,showClass = 'op-spring-video-btnshow',hideClass = 'op-spring-video-btnhide';getNow = funct{%*i*%}ion() {var timeDiff = new Date() - time.JSTime;return new Date( timeDiff + time.realTime.getTime() );};getDate = function( date ) {return [ date.getFullYear(), date.getMonth(), date.getDate() ].join('-');};switchTime = function( str ) {var ret = str.split( /:|\s+|-/ );return new Date( ret[0], ret[1]-1, ret[2], ret[3], ret[4], ret[5] );};limitLen = function( str, length ) {var count = 0;for ( var i = 0, l = str.length; i < l; i++ ) {count += str.charCodeAt( i ) > 255 ? 2 : 1;if ( count > length ){%*i*%} {i -= str.charCodeAt( i - 1 ) > 255 ? 1 : 2;break;}}return str.substr( 0, i ) + ( i == str.length ? '' : '...' );};timerFuncs = [];timer = setInterval(function() {var now = getNow(),i,l,ret;for ( i = 0, l = timerFuncs.length; i < l; i++ ) {if ( timerFuncs[ i ] ) {ret = timerFuncs[ i ]( now );if ( ret === false ) {timerFuncs[ i ] = null;}}}}, 1000);renderVideo = function( data, isLast ) {var tpl = '<li class="c-span6 #{last} op-spring-video-st#{status}">\<a href="#{url}" class="op-spring-video-i{%*i*%}mg" target="_blank">\<img src="#{img}" class="c-img c-img6" />\<span class="op-spring-video-guestbg"></span>\<span class="op-spring-video-guestTitle">#{guestTitle}</span>\<span class="op-spring-video-guest">#{guest}</span>\</a>\<a href="#{url}" target="_blank">#{title}</a>\<span class="op-spring-video-time">#{showtime}</span>\<span class="op-spring-video-stbox">\<span class="op-spring-video-st1text">#{status1}</span>\<a href="#{url}" target="_blank" class="op-spring-video-st2text">#{status2}</a>{%*i*%}\<a href="#{url}" target="_blank" class="op-spring-video-st3text">#{status3}</a>\</span>\</li>',now = getNow(),startTime = switchTime( data.startTime ),endTime = switchTime( data.endTime ),st = 2,st1text,video;st1text = status.st1;if ( now < startTime ) {st = 1;if ( getDate( now ) != getDate( startTime ) ) {st1text = st1spec;}}if ( now > endTime ) {st = 3;}video = $( $.format( tpl, {last: isLast ? 'c-span-last' : '',status: st,url: data.url,img: data.img,guestTitle: guestTitle,guest: limitLen( d{%*i*%}ata.guest, 28 ),title: limitLen( data.title, 18 ),showtime: data.showtime,status1: st1text,status2: status.st2,status3: status.st3}));bindTime( st, startTime, endTime, video );return video;};bindTime = function( status, startTime, endTime, obj ) {if ( status < 3 ) {timerFuncs.push(function( time ) {if ( time > endTime && !obj.hasClass( 'op-spring-video-st3' ) ) {obj.removeClass( 'op-spring-video-st1 op-spring-video-st2' ).addClass( 'op-spring-video-st3' );return false;}if ( time > startTime && !{%*i*%}obj.hasClass( 'op-spring-video-st2' ) ) {obj.removeClass( 'op-spring-video-st1' ).addClass( 'op-spring-video-st2' );}});};};firstPageList.each(function( i, v ) {var obj = $( v ),attr = $.parseJSON( obj.attr( 'spring-video' ) );bindTime( attr.status, attr.startTime, attr.endTime, obj );});btn.click(function() {var flag = btn.hasClass( showClass ),length = flag ? videoList.length : 4,i,isLast;listBox.html( '' );timerFuncs = [];btn.toggleClass( showClass, !flag );btn.toggleClass( hideClass, flag );{%*i*%}for ( i = 0; i < length; i ++ ) {isLast = ( i + 1 ) % 4 == 0;renderVideo( videoList[i], isLast ).appendTo( listBox );}});this.dispose = function() {clearInterval( timer );};});</script>{%/block%}